import { IObject } from "@daybrush/utils";
declare class ListMap<T> {
    private obj;
    private objKeys;
    has(key: string | number): boolean;
    get(key: string | number): T;
    set(key: string | number, value: T): this;
    size(): number;
    keys(): Array<number | string>;
    values(): T[];
    getIndex(key: string | number): number;
    findIndex(callback: (value: T, key: number | string, index: number, obj: IObject<T>) => boolean): number;
    find(callback: (value: T, key: number | string, index: number, obj: IObject<T>) => boolean): T;
    remove(key: string | number): this;
    splice(index: number, deleteCount: number, ...items: Array<[number | string, T]>): Array<[number | string, T]>;
    forEach(callback: (value: T, key: number | string, index: number, obj: IObject<T>) => void): this;
    private setItem;
    private removeItem;
    private spliceKeys;
}
export default ListMap;
